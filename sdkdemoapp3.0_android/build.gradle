// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        jcenter()
        // ============== fabric start
//        maven { url 'https://maven.fabric.io/public' }
        // ============== fabric end
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.1'
        // ============== fabric start
//        classpath 'io.fabric.tools:gradle:1.+'
        // ============== fabric end
    }
}

allprojects {
    repositories {
        jcenter()
        google()
    }
}

apply plugin: 'com.android.application'

/**
 * BQMM集成
 * 在开始使用BQMM之前，开发者需要首先申请到一对AppID和AppSecret，并用它们初始化SDK。
 * 为了运行本Demo，请在项目根目录下的local.properties中加入如下两行：
 * bqmm.appID=<申请到的AppID>
 * bqmm.appSecret=<申请到的AppSecret>
 *
 * 以下代码会从local.properties中读取这两个值
 */
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def bqmmAppID = properties.getProperty('bqmm.appID')
def bqmmAppSecret = properties.getProperty('bqmm.appSecret')


// ============== fabric start
//apply plugin: 'io.fabric'
// ============== fabric end

// ============== fabric start
//repositories {
//    maven { url 'https://maven.fabric.io/public' }
//}
// ============== fabric end


android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "com.hyphenate.chatuidemo"
        minSdkVersion 11
        targetSdkVersion 25
        multiDexEnabled true
        /**
         * BQMM集成
         * 以下代码可以把appID和appSecret写入AndroidManifest
         */
        manifestPlaceholders = [bqmmAppID: bqmmAppID, bqmmAppSecret: bqmmAppSecret]
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        androidTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            lintOptions{
                abortOnError false
            }
        }
    }
}

dependencies {
    compile project(':redpacketlibrary')
    compile project(':EaseUI')
    compile fileTree(dir: 'libs', include: '*.jar', exclude: 'android-support-multidex.jar')
    //考虑到在eclipse中,直接使用源码
//    compile ('com.anthonycr.grant:permissions:1.0'){
//        exclude module: 'support-v4'
//    }
// ============== fabric start
//    compile('com.crashlytics.sdk.android:crashlytics:2.6.1@aar') {
//        transitive = true;
//    }
// ============== fabric end
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.tencent.bugly:crashreport:latest.release'
}
